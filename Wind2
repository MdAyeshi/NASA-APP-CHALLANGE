import android.app.ProgressDialog;
import android.content.Context;
import android.graphics.drawable.Drawable;
import android.os.AsyncTask;
import android.widget.Toast;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
import org.apache.http.util.EntityUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by indrozz on 29/4/17.
 */

interface GetCallback{
    void done(String[] o, String result);
}

public class Server {

    public static final String SERVER_ADDRESS = "http://api.openweathermap.org/data/2.5/weather?lat=28.547&lon=77.3266&appid=724022dcfba8a09ac56978c8e7d63a3e";
    public static final int CONNECTION_TIMEOUT = 1000*10;
    private ProgressDialog progressDialog;
    private String result;
    private Context context;

    public Server(Context context){
        this.context = context;
        progressDialog = new ProgressDialog(context);
        progressDialog.setCancelable(false);
        progressDialog.setMessage("Please wait...");
    }

    public void getWeather(String lat, String lon,GetCallback callBack){
        progressDialog.setTitle("Fetching...");
        progressDialog.show();
        new GetWeatherAsyncTask(lat,lon,callBack).execute();
    }

    public class GetWeatherAsyncTask extends AsyncTask<Void,Void,String[]>{
        private String lat, lon;
        private GetCallback callBack;

        public GetWeatherAsyncTask(String lat, String lon, GetCallback callBack){
            this.lat = lat;
            this.lon = lon;
            this.callBack = callBack;
        }

        @Override
        protected String[] doInBackground(Void... params) {

            String[] co = new String[2];

            try{

                HttpParams httpParams = new BasicHttpParams();
                HttpConnectionParams.setConnectionTimeout(httpParams,CONNECTION_TIMEOUT);
                HttpConnectionParams.setSoTimeout(httpParams,CONNECTION_TIMEOUT);

                HttpClient client = new DefaultHttpClient(httpParams);
                HttpPost post = new HttpPost(SERVER_ADDRESS);
                HttpResponse response = client.execute(post);
                result = EntityUtils.toString(response.getEntity());

            }catch (IOException e ){
                result = "No Internet";
                cancel(true);
            }
            try{
                JSONObject jsonObject = new JSONObject(result);
                //JSONArray jArr = jsonObject.getJSONArray("weather");
                JSONObject jObj = jsonObject.getJSONObject("wind");
                co[0] = jObj.getString("speed");
                co[1] = jObj.getString("deg");

            }catch (Exception e){
                result = "No Internet";
                cancel(true);
            }

            return co;
        }

        @Override
        protected void onCancelled() {
            progressDialog.dismiss();
            callBack.done(null, result);
            super.onCancelled();
        }

        @Override
        protected void onPostExecute(String[] co) {
            progressDialog.dismiss();
            callBack.done(co, result);
            super.onPostExecute(co);
        }
    }
}
